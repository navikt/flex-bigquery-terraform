name: "Terraform"
on: push

env:
  DEV_DIR: './dev'
  PROD_DIR: './prod'
  VAR_FILE:  '../terraform.tfvars'

jobs:
  terraform-plan-dev:
    name: "terraform plan gcp-dev"
    runs-on: ubuntu-latest
    concurrency: terraform-plan-dev
    defaults:
      run:
        working-directory: ${{ env.DEV_DIR }}

    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_SECRET_DEV }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Run 'terraform setup'
        uses: hashicorp/setup-terraform@v2

      - name: Run 'terraform init'
        run: terraform init

      - name: Run 'terraform fmt'
        run: terraform fmt -check

      - name: Run 'terraform validate'
        run: terraform validate

      - name: Run 'terraform plan'
        run: terraform plan -var-file=${{ env.VAR_FILE }}

  terraform-plan-prod:
    name: "terraform plan gcp-prod"
    runs-on: ubuntu-latest
    concurrency: terraform-plan-prod
    defaults:
      run:
        working-directory: ${{ env.PROD_DIR }}

    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_SECRET_PROD }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Run 'terraform setup'
        uses: hashicorp/setup-terraform@v2

      - name: Run 'terraform init'
        run: terraform init

      - name: Run 'terraform fmt'
        run: terraform fmt -check

      - name: Run 'terraform validate'
        run: terraform validate

      - name: Run 'terraform plan'
        run: terraform plan -var-file=${{ env.VAR_FILE }}

  terraform-apply-dev:
    needs: terraform-plan-dev
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/dev-')
    name: "terraform apply gcp-dev"
    runs-on: ubuntu-latest
    concurrency: terraform-plan-dev, terraform-apply-dev
    defaults:
      run:
        working-directory: ${{ env.DEV_DIR }}

    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_SECRET_DEV }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Run 'terraform setup'
        uses: hashicorp/setup-terraform@v2

      - name: Run 'terraform init'
        run: terraform init

      - name: Run 'terraform apply'
        run: terraform apply -auto-approve -var-file=${{ env.VAR_FILE }}

  terraform-apply-prod:
    needs: terraform-plan-prod
    if: github.ref == 'refs/heads/master'
    name: "terraform apply gcp-prod"
    runs-on: ubuntu-latest
    concurrency: terraform-plan-prod, terraform-apply-prod
    defaults:
      run:
        working-directory: ${{ env.PROD_DIR }}

    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_SECRET_PROD }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: Run 'terraform setup'
        uses: hashicorp/setup-terraform@v2

      - name: Run 'terraform init'
        run: terraform init

      - name: Run 'terraform apply'
        run: terraform apply -auto-approve -var-file=${{ env.VAR_FILE }}
